- data_file: '../../data/time_series.Rda'
  repetitions: 5
  split_type: year
  output_dir: /results/test
  test_years:
    - 2017
  stations:
    - gios_krasinskiego
  models:
    - type: regression
    
    # simple neural network config
    - type: neural
      hidden: 10-5-2
      epochs: 300
      min_delta: 1
      batch_size: 64
        
    # neural network config with inheritance
    - type: neural
      epochs: 100
      children:
        - hidden: 10-5-2
          min_delta: 0.7
          children:
            - activation: tanh
  
    # simple SVR config
    - type: svr
      kernel: radial
      gamma: 1e-5
      epsilon: 1e-3
      cost: 1e3
      
    # SVR config with inheritance
    - type: svr
      kernel: radial
      gamma: 1e-5
      epsilon: 1e-3
      children:
        - cost: 1e5
          gamma: 0.01
      
# models attached to a specific data split
# based on seasons:
# 1 - winter
# 2 - spring
# 3 - summer
# 4 - autumn
# no split_id - model should be trained on each
# defined data split
- data_file: '../../data/time_series.Rda'
  split_type: season_and_year
  repetitions: 3
  stations: [gios_krasinskiego]
  models:
    - type: neural
      children:
        - hidden: 100
        - hidden: 200
        
        - split_id: 1
          hidden: 10
          
        - min_delta: 2
          hidden: 5-3
          children:
            - split_id: 1
            - split_id: 2
            
        - split_id: 3
          min_delta: 3
          hidden: 10-5
          
        - min_delta: 4
          children:
            - hidden: 10-7-3
              split_id: 2
              
            - hidden: 10-5-5
              children:
              - split_id: 3
              - split_id: 4


# specs with list parameters should be
# unwrapped into specs with all possible
# combinations of the values
- data_file: '../../data/time_series.Rda'
  split_type: year
  repetitions: 3
  stations: [gios_krasinskiego]
  models:
    - type: neural
      hidden: "10-5"
    - type: neural
      hidden:
        - "10-5"
    - type: neural
      hidden: 5
      l2: 
        - 1
        - 2
      epsilon:
        - 3
        - 4
    - type: neural
      hidden: 5
      batch_size: 128
      children:
        - epsilon:
          - 1
          - 2
    - type: neural
      hidden: 5
      batch_size:
        - 64
        - 128
      children:
        - epsilon: 1


# the number of models should be equal to the desired
# if there are enough combinations of parameters
- data_file: '../../data/time_series.Rda'
  split_type: year
  stations: [gios_krasinskiego]
  models:
    - type: svr
      random: true
      model_count: 5
      kernel: radial
      gamma: 1
      cost: 1
      epsilon:
        - 1
        - 10

# should create specs with all possible combinations
# if there are not enough combinations to satisfy the model_count constraint
- data_file: '../../data/time_series.Rda'
  split_type: year
  stations: [gios_krasinskiego]
  models:
    - type: svr
      random: true
      model_count: 100
      kernel: radial
      gamma: 1
      cost: 1
      epsilon:
        - 1
        - 2

- data_file: '../../data/time_series.Rda'
  split_type: year
  stations: [gios_krasinskiego]
  models:
    # random values should not exceed the defined
    # min and max exponent bounds
    - type: svr
      random: true
      kernel: radial
      gamma:
        - 1
        - 2
      epsilon:
        - 3
        - 4
      cost:
        - 5
        - 6

    # should preserve exponent base for
    # random value generation
    - type: svr
      random: true
      exp_base: 2
      kernel: radial
      gamma: 1
      epsilon: 2
      cost:
        - 3
        - 4
        
    # should preserve exponent step
    - type: svr
      random: true
      exp_base: 2
      exp_step: 3
      kernel: radial
      gamma: 1
      epsilon: 2
      cost: 
        - 1
        - 9
    
    # should preserve own non-random values
    - type: svr
      random: true
      kernel: radial
      gamma: 
        - 1
        - 2
      epsilon:
        - 3
        - 4
      cost: 5
    
    # should preserve parent non-random values
    - type: svr
      kernel: radial
      gamma: 1
      children:
        - random: true
          epsilon:
            - 2
            - 3
          cost: 
            - 4
            - 5
            
    # should preserve child non-random values
    - type: svr
      random: true
      kernel: radial
      gamma:
        - 1
        - 2
      epsilon: 
        - 3
        - 4
      children:
        - cost: 5
        
    # should preserve parent list values
    - type: svr
      kernel: radial
      gamma:
        - 1
        - 2
      children:
        - random: true
          epsilon:
            - 3
            - 4
          cost: 
            - 5
            - 6
            
    # should preserve child list values
    - type: svr
      random: true
      kernel: radial
      gamma:
        - 1
        - 2
      epsilon: 
        - 3
        - 4
      children:
        - cost:
          - 5
          - 6
    
    # should combine parent and child random values
    - type: svr
      random: true
      kernel: radial
      gamma:
        - 1
        - 2
      children:
        - random: true
          epsilon:
            - 3
            - 4
          cost: 
            - 5
            - 6

    # should handle complex specs properly
    - type: svr
      kernel: radial
      children:
        - random: true
          model_count: 2
          gamma:
            - 1
            - 10
          children:
            epsilon:
              - 11
              - 12
            children:
              - cost: 13
